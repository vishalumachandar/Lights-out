{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\React Projects\\\\Lights-Out\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\React Projects\\\\Lights-Out\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\React Projects\\\\Lights-Out\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\React Projects\\\\Lights-Out\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\React Projects\\\\Lights-Out\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\React Projects\\\\Lights-Out\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\React Projects\\\\Lights-Out\\\\src\\\\Board.js\";\nimport React, { Component } from \"react\";\nimport Cell from \"./Cell\";\nimport './Board.css';\n\nvar Board = /*#__PURE__*/function (_Component) {\n  _inherits(Board, _Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this.state = {\n      hasWon: false,\n      board: _this.createBoard()\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"createBoard\",\n    value: function createBoard() {\n      var board = [];\n\n      for (var y = 0; y < this.props.nrows; y++) {\n        var row = [];\n\n        for (var x = 0; x < this.props.ncols; x++) {\n          row.push(Math.random() < this.props.chanceLightStartsOn);\n        }\n\n        board.push(row);\n      }\n\n      return board;\n    }\n  }, {\n    key: \"flipCellsAround\",\n    value: function flipCellsAround(coord) {\n      var _this$props = this.props,\n          ncols = _this$props.ncols,\n          nrows = _this$props.nrows;\n      var board = this.state.board;\n\n      var _coord$split$map = coord.split(\"-\").map(Number),\n          _coord$split$map2 = _slicedToArray(_coord$split$map, 2),\n          y = _coord$split$map2[0],\n          x = _coord$split$map2[1];\n\n      function flipCell(y, x) {\n        if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\n          board[y][x] = !board[y][x];\n        }\n      } //flipping the cell itslef\n\n\n      flipCell(y, x);\n      flipCell(y, x - 1); //left\n\n      flipCell(y, x + 1); //right\n\n      flipCell(y - 1, x); //below\n\n      flipCell(y + 1, x); //above\n\n      var hasWon = board.every(function (row) {\n        return row.every(function (cell) {\n          return cell === false;\n        });\n      });\n      console.log(hasWon);\n      this.setState({\n        board: board,\n        hasWon: hasWon\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.hasWon) {\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }, \" You Won!\");\n      }\n\n      var tblBoard = [];\n\n      for (var y = 0; y < this.props.nrows; y++) {\n        var row = [];\n\n        var _loop = function _loop(x) {\n          var coord = \"\".concat(y, \"-\").concat(x);\n          row.push( /*#__PURE__*/React.createElement(Cell, {\n            key: coord,\n            isLit: _this2.state.board[y][x],\n            flipCellsAroundMe: function flipCellsAroundMe() {\n              return _this2.flipCellsAround(coord);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 18\n            }\n          }));\n        };\n\n        for (var x = 0; x < this.props.ncols; x++) {\n          _loop(x);\n        }\n\n        tblBoard.push( /*#__PURE__*/React.createElement(\"tr\", {\n          key: y,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }\n        }, row));\n      }\n\n      return /*#__PURE__*/React.createElement(\"table\", {\n        className: \"Board\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, tblBoard));\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nBoard.defaultProps = {\n  nrows: 5,\n  ncols: 5,\n  chanceLightStartsOn: 0.25\n};\nexport default Board;","map":{"version":3,"sources":["C:/Users/Vishal/Desktop/React Projects/Lights-Out/src/Board.js"],"names":["React","Component","Cell","Board","props","state","hasWon","board","createBoard","y","nrows","row","x","ncols","push","Math","random","chanceLightStartsOn","coord","split","map","Number","flipCell","every","cell","console","log","setState","tblBoard","flipCellsAround","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Cell from \"./Cell\";\nimport './Board.css';\n\nclass Board extends Component {\n\n  static defaultProps ={\n    nrows:5,\n    ncols:5,\n    chanceLightStartsOn:0.25\n  };\n  constructor(props) {\n    super(props);\n    this.state={\n      hasWon:false,\n      board:this.createBoard()\n    };\n  }\n\n\n  createBoard() {\n    let board = [];\n    for(let y=0;y<this.props.nrows;y++){\n      let row=[];\n      for(let x=0;x<this.props.ncols;x++){\n        row.push(Math.random() < this.props.chanceLightStartsOn)\n      }\n      board.push(row);\n    }\n    return board;\n  }\n\n\n  flipCellsAround(coord) {\n    let {ncols, nrows} = this.props;\n    let board = this.state.board;\n    let [y, x] = coord.split(\"-\").map(Number);\n\n\n    function flipCell(y, x) {\n\n      if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\n        board[y][x] = !board[y][x];\n      }\n    }\n    //flipping the cell itslef\n    flipCell(y,x);\n    flipCell(y,x-1);//left\n    flipCell(y,x+1);//right\n    flipCell(y-1,x);//below\n    flipCell(y+1,x);//above\n    let hasWon=board.every(row => row.every(cell => cell===false));\n    console.log(hasWon)\n    this.setState({board:board,hasWon:hasWon})\n  }\n\n  \n\n\n  render() {\n    if(this.state.hasWon ){\n      return<h1> You Won!</h1>\n    }\n    \n    let tblBoard=[];\n    for(let y=0;y<this.props.nrows;y++){\n      let row=[];\n      for(let x=0;x<this.props.ncols;x++){\n        let coord=`${y}-${x}`\n        row.push(<Cell key={coord}isLit={this.state.board[y][x]} flipCellsAroundMe={() =>this.flipCellsAround(coord)}/>)\n      }\n    tblBoard.push(<tr key={y}>{row}</tr>)\n    }\n      return(\n      <table className=\"Board\"> \n        <tbody>\n          {tblBoard }\n        </tbody>\n      </table>\n    );\n}\n}\n\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}