{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\Projects\\\\React\\\\Lights-Out\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\Projects\\\\React\\\\Lights-Out\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\Projects\\\\React\\\\Lights-Out\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\Projects\\\\React\\\\Lights-Out\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\Projects\\\\React\\\\Lights-Out\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\Projects\\\\React\\\\Lights-Out\\\\src\\\\Cell.js\";\nimport React, { Component } from 'react';\nimport \"./Cell.css\";\n\nvar Cell = /*#__PURE__*/function (_Component) {\n  _inherits(Cell, _Component);\n\n  function Cell() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cell)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClick = function (evt) {\n      _this.props.flipCellsAroundMe();\n    };\n\n    return _this;\n  }\n\n  _createClass(Cell, [{\n    key: \"render\",\n    value: function render() {\n      var classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n      return /*#__PURE__*/React.createElement(\"td\", {\n        className: classes,\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return Cell;\n}(Component);\n\nexport default Cell;","map":{"version":3,"sources":["C:/Users/Vishal/Desktop/Projects/React/Lights-Out/src/Cell.js"],"names":["React","Component","Cell","handleClick","evt","props","flipCellsAroundMe","classes","isLit"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;;IAGMC,I;;;;;;;;;;;;;;;;UACJC,W,GAAY,UAACC,GAAD,EAAQ;AAClB,YAAKC,KAAL,CAAWC,iBAAX;AACD,K;;;;;;;6BAEQ;AACP,UAAIC,OAAO,GAAG,UAAU,KAAKF,KAAL,CAAWG,KAAX,GAAmB,WAAnB,GAAiC,EAA3C,CAAd;AAEA,0BACI;AAAI,QAAA,SAAS,EAAED,OAAf;AAAwB,QAAA,OAAO,EAAE,KAAKJ,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGD;;;;EAXgBF,S;;AAenB,eAAeC,IAAf","sourcesContent":["import React, {Component} from 'react'\nimport \"./Cell.css\"\n\n\nclass Cell extends Component {\n  handleClick=(evt)=> {\n    this.props.flipCellsAroundMe();\n  }\n\n  render() {\n    let classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n\n    return (\n        <td className={classes} onClick={this.handleClick} />\n    )\n  }\n}\n\n\nexport default Cell"]},"metadata":{},"sourceType":"module"}